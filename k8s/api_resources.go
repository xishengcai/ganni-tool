package k8s

var (
	ApiResourcesMap = map[string]string{
		"Service":                        "services",
		"PersistentVolumeClaim":          "persistentvolumeclaims",
		"Namespace":                      "namespaces",
		"ReplicationController":          "replicationcontrollers",
		"ConfigMap":                      "configmaps",
		"Secret":                         "secrets",
		"Pod":                            "pods",
		"ServiceAccount":                 "serviceaccounts",
		"PodTemplate":                    "podtemplates",
		"Endpoints":                      "endpoints",
		"Binding":                        "bindings",
		"ResourceQuota":                  "resourcequotas",
		"LimitRange":                     "limitranges",
		"Node":                           "nodes",
		"PersistentVolume":               "persistentvolumes",
		"ComponentStatus":                "componentstatuses",
		"APIService":                     "apiservices",
		"ReplicationControllerDummy":     "replicationcontrollers",
		"StatefulSet":                    "statefulsets",
		"Deployment":                     "deployments",
		"ControllerRevision":             "controllerrevisions",
		"DaemonSet":                      "daemonsets",
		"ReplicaSet":                     "replicasets",
		"Event":                          "events",
		"TokenReview":                    "tokenreviews",
		"SubjectAccessReview":            "subjectaccessreviews",
		"LocalSubjectAccessReview":       "localsubjectaccessreviews",
		"SelfSubjectAccessReview":        "selfsubjectaccessreviews",
		"SelfSubjectRulesReview":         "selfsubjectrulesreviews",
		"HorizontalPodAutoscaler":        "horizontalpodautoscalers",
		"Job":                            "jobs",
		"CronJob":                        "cronjobs",
		"CertificateSigningRequest":      "certificatesigningrequests",
		"Ingress":                        "ingresses",
		"PodDisruptionBudget":            "poddisruptionbudgets",
		"PodSecurityPolicy":              "podsecuritypolicies",
		"ClusterRole":                    "clusterroles",
		"RoleBinding":                    "rolebindings",
		"ClusterRoleBinding":             "clusterrolebindings",
		"Role":                           "roles",
		"StorageClass":                   "storageclasses",
		"VolumeAttachment":               "volumeattachments",
		"CSIDriver":                      "csidrivers",
		"CSINode":                        "csinodes",
		"ValidatingWebhookConfiguration": "validatingwebhookconfigurations",
		"MutatingWebhookConfiguration":   "mutatingwebhookconfigurations",
		"CustomResourceDefinition":       "customresourcedefinitions",
		"PriorityClass":                  "priorityclasses",
		"Lease":                          "leases",
		"RuntimeClass":                   "runtimeclasses",
		"NetworkSet":                     "networksets",
		"FelixConfiguration":             "felixconfigurations",
		"BGPConfiguration":               "bgpconfigurations",
		"IPPool":                         "ippools",
		"IPAMHandle":                     "ipamhandles",
		"HostEndpoint":                   "hostendpoints",
		"IPAMBlock":                      "ipamblocks",
		"NetworkPolicy":                  "networkpolicies",
		"ClusterInformation":             "clusterinformations",
		"GlobalNetworkPolicy":            "globalnetworkpolicies",
		"BGPPeer":                        "bgppeers",
		"IPAMConfig":                     "ipamconfigs",
		"BlockAffinity":                  "blockaffinities",
		"GlobalNetworkSet":               "globalnetworksets",
		"RsOverView":                     "rsoverviews",
		"Application":                    "applications",
	}
)
